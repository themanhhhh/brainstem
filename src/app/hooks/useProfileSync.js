'use client';
import { useEffect, useRef } from 'react';
import { useAuth } from '../context/AuthContext';
import { usePathname } from 'next/navigation';

export const useProfileSync = () => {
  const { fetchProfile, user } = useAuth();
  const pathname = usePathname();
  const timeoutRef = useRef(null);

  useEffect(() => {
    console.log('üîÑ useProfileSync triggered on page:', pathname);
    
    // Clear timeout c≈© n·∫øu c√≥
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
    }
    
    // Debounce ƒë·ªÉ tr√°nh g·ªçi qu√° nhi·ªÅu l·∫ßn
    timeoutRef.current = setTimeout(() => {
      // Ch·ªâ g·ªçi fetchProfile n·∫øu user ƒë√£ ƒëƒÉng nh·∫≠p (c√≥ token)
      if (user || (typeof window !== 'undefined' && document.cookie.includes('token='))) {
        console.log('üöÄ Calling fetchProfile from useProfileSync for page:', pathname);
        fetchProfile(true); // Force refetch ƒë·ªÉ ƒë·∫£m b·∫£o lu√¥n check
      } else {
        console.log('‚ö†Ô∏è No user/token found, skipping fetchProfile on page:', pathname);
      }
    }, 300); // Delay 300ms

    // Cleanup function
    return () => {
      if (timeoutRef.current) {
        clearTimeout(timeoutRef.current);
      }
    };
  }, [pathname, fetchProfile, user]);

  return null; // Hook n√†y kh√¥ng return UI
}; 